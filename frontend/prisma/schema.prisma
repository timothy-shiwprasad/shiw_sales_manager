generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Products {
  id            String         @id @default(uuid())
  name          String         @unique
  description   String?
  sizeType     String
  size          Int
  caseSize     Int
  barcode       BigInt?        @unique
  pic           String?
  createAt      DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  isVat        Boolean
  costPrices    CostPrice[]
  sales         Sales[]
  sellingprices SellingPrice[]
}

model SellingPrice {
  id         String   @id @default(uuid())
  cost Int
  customerId String
  productId  String
  createAt   DateTime @default(now())
  updatedAt  DateTime @updatedAt
  customer   Entity   @relation(fields: [customerId], references: [id])
  product    Products @relation(fields: [productId], references: [id])
}

model CostPrice {
  id         String   @id @default(uuid())
  cost Int
  supplierId String
  productId  String
  createAt   DateTime @default(now())
  updatedAt  DateTime @updatedAt
  product    Products @relation(fields: [productId], references: [id])
  supplier   Entity   @relation(fields: [supplierId], references: [id])
}

model Entity {
  id            String         @id @default(uuid())
  name          String          @unique
  address       String
  email         String
  telephone     Int
  createAt      DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  category      Category[]
  costPrices    CostPrice[]
  invoices      Invoice[]
  sellingprices SellingPrice[]
}

model Category {
  id        String   @id @default(uuid())
  type      String    @unique
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  entity   Entity[]
}

model Invoice {
  id         String   @id @default(uuid())
  customerId String
  date       DateTime
  total      Int
  pdf        String
  vat        Boolean
  vatTotal   Int?
  createAt   DateTime @default(now())
  updatedAt  DateTime @updatedAt
  customer   Entity   @relation(fields: [customerId], references: [id])
  sales      Sales[]
}

model Sales {
  id        String   @id @default(uuid())
  invoiceId String
  productId String
  price     Int
  quantity  Int
  total     Int
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  invoice   Invoice  @relation(fields: [invoiceId], references: [id])
  product   Products @relation(fields: [productId], references: [id])
}
